# 這些程式碼設定網頁的格式，並安裝、載入一些基本的套件，請大家不要去改動<br>
rm(list=ls(all=T))
knitr::opts_chunk$set(comment = NA)
knitr::opts_knit$set(global.par = TRUE)
options(scipen=20, digits=5, width=80)
if(!require(pacman)) install.packages("pacman")
pacman::p_load(magrittr)
SkinColor = c("白","白","白","白","紅","紅","紅","黃","黃","黑")
par(mfrow=c(1,4), mar=c(2,5,3,1), cex=0.75)
table(SkinColor) %>% barplot(main="類別的數量分布", ylab="頻率", xlab="SkinColor")
table(SkinColor) %>% prop.table %>% barplot(main="?", ylab="?", xlab="SkinColor")
hist(Weight, main="?", ylab="?")
# 這些程式碼設定網頁的格式，並安裝、載入一些基本的套件，請大家不要去改動<br>
rm(list=ls(all=T))
knitr::opts_chunk$set(comment = NA)
knitr::opts_knit$set(global.par = TRUE)
options(scipen=20, digits=5, width=80)
if(!require(pacman)) install.packages("pacman")
pacman::p_load(magrittr)
SkinColor = c("白","白","白","白","紅","紅","紅","黃","黃","黑")
x = sample(SkinColor, size=20, replace=T); x
par(mfrow=c(1,4), mar=c(2,3,3,1), cex=0.75)
table(SkinColor) %>% prop.table %>% barplot(main='SkinColor')
table( sample(SkinColor,20,T) ) %>% prop.table %>% barplot(main='x1')
table( sample(SkinColor,20,T) ) %>% prop.table %>% barplot(main='x2')
table( sample(SkinColor,20,T) ) %>% prop.table %>% barplot(main='x3')
set.seed(2)
sapply(1:6, function(n) {
sample(SkinColor,10^n,T) %>% table %>% prop.table
})
# 這些程式碼設定網頁的格式，並安裝、載入一些基本的套件，請大家不要去改動<br>
rm(list=ls(all=T))
knitr::opts_chunk$set(comment = NA)
knitr::opts_knit$set(global.par = TRUE)
options(scipen=20, digits=5, width=80)
if(!require(pacman)) install.packages("pacman")
if(!require(plotly)) install.packages("plotly")
if(!require(tidyr)) install.packages("tidyr")
pacman::p_load(dplyr,ggplot2,tidyr,plotly,stringr)
load("RiTW/ritw01.rdata")
ls()
BIG6 = c("桃園市","臺北市","臺中市","臺南市","高雄市","新北市")
Y = DemoY108 %>% select(
year, vid=`村里代碼`, city=`縣市名稱`, county=`鄉鎮市區名稱`,
vname=`村里名稱`, house=`戶數`, pop=`人口數`, fm.ratio=`性比例`,
sp.ratio=`扶養比`, elderly=`老化指數`) %>%
filter(! city %in% c("連江縣","金門縣","澎湖縣")) %>%
mutate(city = case_when(
city == "臺北縣" ~ "新北市",
city == "桃園縣" ~ "桃園市",
city == "高雄縣" ~ "高雄市",
city == "臺南縣" ~ "臺南市",
city == "臺中縣" ~ "臺中市",
TRUE ~ city ))
Y %>% is.na %>% colSums
Y %>% group_by(year, city) %>%
summarise(Pop = sum(pop)) %>%
ggplot(aes(x=year, y=Pop, col=factor(city)) ) +
geom_line(size=1) -> g; ggplotly(g)
View(Age26)
# 這些程式碼設定網頁的格式，並安裝、載入一些基本的套件，請大家不要去改動<br>
rm(list=ls(all=T))
knitr::opts_chunk$set(comment = NA)
knitr::opts_knit$set(global.par = TRUE)
options(scipen=20, digits=5, width=80)
if(!require(pacman)) install.packages("pacman")
if(!require(plotly)) install.packages("plotly")
if(!require(tidyr)) install.packages("tidyr")
pacman::p_load(dplyr,ggplot2,tidyr,plotly,stringr)
load("RiTW/ritw01.rdata")
ls()
table(DemoY108$year)
BIG6 = c("桃園市","臺北市","臺中市","臺南市","高雄市","新北市")
Y = DemoY108 %>% select(
year, vid=`村里代碼`, city=`縣市名稱`, county=`鄉鎮市區名稱`,
vname=`村里名稱`, house=`戶數`, pop=`人口數`, fm.ratio=`性比例`,
sp.ratio=`扶養比`, elderly=`老化指數`) %>%
filter(! city %in% c("連江縣","金門縣","澎湖縣")) %>%
mutate(city = case_when(
city == "臺北縣" ~ "新北市",
city == "桃園縣" ~ "桃園市",
city == "高雄縣" ~ "高雄市",
city == "臺南縣" ~ "臺南市",
city == "臺中縣" ~ "臺中市",
TRUE ~ city ))
Y %>% is.na %>% colSums
Y %>% group_by(year, city) %>%
summarise(Pop = sum(pop)) %>%
ggplot(aes(x=year, y=Pop, col=factor(city)) ) +
geom_line(size=1) -> g; ggplotly(g)
df = Y %>% group_by(city, year) %>% summarise(
`性比例` = sum(fm.ratio*pop)/sum(pop),
`扶養比` = sum(sp.ratio*pop)/sum(pop),
`老化指數` = sum(elderly*pop)/sum(pop),
`人口` = sum(pop)
) %>% filter(year %in% seq(99,108,3))
scale1 = function(mp=0) scale_color_gradient2(
midpoint=mp, low="seagreen4", mid="wheat2", high="firebrick2")
df %>% #filter(city %in% BIG6) %>%
ggplot(aes(x=`扶養比`, y=`老化指數`, col=`性比例`, size=`人口`, label=year)) +
geom_point(alpha=1) + scale1(100) + theme_bw() +
facet_wrap(~city, ncol=4) -> g; ggplotly(g)
df %>% #filter(city %in% BIG6) %>%
ggplot(aes(x=`扶養比`, y=`老化指數`, col=`性比例`, size=`人口`, label=city)) +
geom_point(alpha=1) + scale1(100) + theme_bw() +
facet_wrap(~year) -> g; ggplotly(g)
table(DemoQ$`資料時間`)
Q = DemoQ %>% transmute(
year = str_remove(`資料時間`,"Y.*$") %>% as.integer,
qtr = str_remove(`資料時間`,"^\\d+Y"),
vid=`村里代碼`, city=`縣市名稱`, county=`鄉鎮市區名稱`, vname=`村里名稱`,
born=`出生數`, death=`死亡數`, marriage=`結婚對數`, devorce=`離婚對數`,
time=`資料時間`
) %>%
filter(! city %in% c("連江縣","金門縣","澎湖縣")) %>%
mutate(city = case_when(
city == "臺北縣" ~ "新北市",
city == "桃園縣" ~ "桃園市",
city == "高雄縣" ~ "高雄市",
city == "臺南縣" ~ "臺南市",
city == "臺中縣" ~ "臺中市",
TRUE ~ city )) %>%
mutate_at(vars(born:devorce), ~replace_na(as.integer(.), 0))
group_by(Q, qtr) %>%
summarise_at(vars(born:devorce), sum) %>%
gather("event", "n", -1) %>%
ggplot(aes(x=qtr, y=n)) + geom_bar(stat="identity") +
facet_wrap(~event, nrow=1)
group_by(Q, time) %>%
summarise_at(vars(born:devorce), sum) %>%
gather("event", "n", -1) %>%
ggplot(aes(x=time, y=n, group=event, col=event)) +
geom_line() -> g ; ggplotly(g)
group_by(Q, year) %>%
summarise_at(vars(born:devorce), sum) %>%
gather("event", "n", -1) %>%
ggplot(aes(x=year, y=n, col=event)) +
geom_line() -> g ; ggplotly(g)
group_by(Q, city) %>%
summarise_at(vars(born:devorce), sum) %>%
ggplot(aes(x=death, y=born, col=marriage, size=devorce, label=city)) +
geom_point(alpha=0.7) +
geom_smooth(method="lm",se=F,color="gold") -> g ; ggplotly(g)
# 這些程式碼設定網頁的格式，並安裝、載入一些基本的套件，請大家不要去改動<br>
rm(list=ls(all=T))
knitr::opts_chunk$set(comment = NA)
knitr::opts_knit$set(global.par = TRUE)
options(scipen=20, digits=5, width=80)
if(!require(pacman)) install.packages("pacman")
SkinColor = c("白","白","白","白","紅","紅","紅","黃","黃","黑")
#sample隨機抽樣的函數，前面放有哪些類別，size=20是抽二十次，每次跑都會是不一樣的x
x = sample(SkinColor, size=20, replace=T); x
par(mfrow=c(1,2), mar=c(2,5,3,1), cex=0.8)
table(SkinColor) %>% barplot(main='SkinColor,Freq')
table(SkinColor) %>% prop.table %>% barplot(main='SkinColor,Prop')
set.seed(2)                         # set.seed for randomization
Weight = rnorm(100,mean=60,sd=5)    # 100 random samples
Weight
par(mfrow=c(1,3), mar=c(2,5,2,1), cex=0.7, bty='n') #設定畫圖
hist(Weight, main='Histogram, Freq')
hist(Weight, main='Histogram, Density', freq=F)
plot(density(Weight),main='Prob. Dist. Function (pdf)',ylim=c(0,0.08))
curve(dnorm(x,60,5),0,100,col='red',add=T)
par(mfrow=c(1,3), mar=c(2,5,2,1), cex=0.7, bty='n') #設定畫圖
hist(Weight, main='Histogram, Freq', freq=F) #用直方圖畫頻率
hist(Weight, main='Histogram, Density', freq=F) #用直方圖畫密度
plot(density(Weight),main='Prob. Dist. Function (pdf)',ylim=c(0,0.08))
curve(dnorm(x,60,5),0,100,col='red',add=T)
pacman::p_load(shiny)
runExample("01_hello")
par(mfrow=c(1,4), mar=c(2,3,3,1), cex=0.75)
Color = rep(c('綠','黑','褐'), c(100,200,300)) # categorial, non-order
table(Color) %>% barplot(main="顏色")
Size = rep(c('大','中','小'), c(150,200,250))  # categorial, order
table(Size) %>% barplot(main="大小")
Freq = rpois(600,2.5)                   # numeric, discrete
table(Freq) %>% barplot(main= "次數")
Weight = rnorm(600,50,15)               # numeric, contineous
hist(Weight, main= "重量")
par(mfrow=c(1,4), mar=c(2,5,3,1), cex=0.75)
table(SkinColor) %>% barplot(main="類別的數量分布", ylab="頻率", xlab="SkinColor")
table(SkinColor) %>% prop.table %>% barplot(main="?", ylab="?", xlab="SkinColor")
hist(Weight, main="?", ylab="?")
hist(Weight, freq=F, main="?", ylab="?")
par(mfrow=c(1,4), mar=c(2,5,3,1), cex=0.75)
table(SkinColor) %>% barplot(main="類別的數量分布", ylab="頻率", xlab="SkinColor")
table(SkinColor) %>% prop.table %>% barplot(main="x類別的機率分布", ylab="機率", xlab="SkinColor")
hist(Weight, main="數值的頻率分布", ylab="頻率")
hist(Weight, freq=F, main="數值的機率密度分布", ylab="機率密度")
par(mfrow=c(1,4), mar=c(2,5,3,1), cex=0.75)
table(SkinColor) %>% barplot(main="類別的數量分布", ylab="頻率", xlab="SkinColor")
table(SkinColor) %>% prop.table %>% barplot(main="類別的機率分布", ylab="機率(次數)", xlab="SkinColor")
hist(Weight, main="數值的頻率分布", ylab="頻率")
hist(Weight, freq=F, main="數值的機率密度分布", ylab="機率密度")
par(mfrow=c(1,4), mar=c(2,5,3,1), cex=0.75)
table(SkinColor) %>% barplot(main="類別的數量分布", ylab="頻率", xlab="SkinColor")
table(SkinColor) %>% prop.table %>% barplot(main="類別的機率分布", ylab="機率", xlab="SkinColor")
hist(Weight, main="數值的頻率(次數)分布", ylab="頻率(次數)")
hist(Weight, freq=F, main="數值的機率密度分布", ylab="機率密度")
dgoem(1:20,0.05)
dgoem(1:20,0.05) %>% cumsum
# 這些程式碼設定網頁的格式，並安裝、載入一些基本的套件，請大家不要去改動<br>
rm(list=ls(all=T))
knitr::opts_chunk$set(comment = NA)
knitr::opts_knit$set(global.par = TRUE)
par(cex=0.8)
options(scipen=20, digits=5, width=80)
if(!require(pacman)) install.packages("pacman")
pacman::p_load(dplyr)
par(mfrow=c(1,1), mar=c(3,4,3,1), cex=0.7)
n = 1000; p = 0.2
rbinom(500000, n, p) %>% hist(breaks=80, freq=F, main="")
curve(dnorm(x, mean=n*p, sd=sqrt(n*p*(1-p))), col='red', lwd=2, add=T)
par(mfrow=c(1,2), cex=0.7)
n = 10; p = 0.2
rbinom(100000, n, p) %>% table %>% barplot()
rnorm(100000, n*p, sqrt(n*p*(1-p))) %>% hist(freq=F)
par(mfrow=c(1,2), cex=0.7)
rbinom(100000, 1000, 0.002) %>% table %>% barplot(main="Boinomial")
rpois(100000, 2)  %>% table %>% barplot(main="Poisson")
sapply(1:10, function(lambda) {
x = rpois(1000000, lambda)
c(mean(x), var(x))
})
par(mfrow=c(1,2), cex=0.7)
(rpois(100000, 1) + rpois(100000, 2)) %>% table %>% barplot(main="Pois[1] + Pois[2]")
rpois(100000, 3)  %>% table %>% barplot(main="Pois[3]")
par(mfrow=c(1,2), mar=c(3,3,3,1), cex=0.7)
replicate(100000, which(rbinom(100, 1, .3) == 1)[1] - 1) %>%
table %>% barplot(main="Binomial Simulation")
rgeom(100000, 0.3) %>% table %>% barplot(main="Geometric")
#問的是從一天到第二十天就可以了
dgoem(1:20,0.05) %>% cumsum
dgeom(1:20,0.05) %>% cumsum
dgeom(0:20,0.05) %>% cumsum
dgeom(0:20,0.05) %>% cumsum
dgeom(1:20,0.05) %>% cumsum
0:100 * dgeom(0:100,0.05)
(1/0.05)-1
0:1000 * dgeom(0:100,0.05)
sum(0:1000 * dgeom(0:100,0.05))
sum(0:1000 * dgeom(0:1000,0.05))
sum(0:1000 * dgeom(0:100,0.05))
sum(0:1000 * dgeom(0:1000,0.05))
?distributions
pacman::p_load(dplyr, vcd)
par(mfrow=c(1,1), cex=0.7)
HorseKicks
# 這些程式碼設定網頁的格式，並安裝、載入一些基本的套件，請大家不要去改動<br>
rm(list=ls(all=T))
knitr::opts_chunk$set(comment = NA)
knitr::opts_knit$set(global.par = TRUE)
par(cex=0.8)
options(scipen=20, digits=5, width=80)
if(!require(pacman)) install.packages("pacman")
if(!require(vcd)) install.packages("vcd")
pacman::p_load(dplyr, vcd)
par(mfrow=c(1,1), cex=0.7)
HorseKicks
#驗證是否符合Poisson分佈
#goodfit前面放資料，後面放分布類型
#p value <0.05有顯著差異
fit = goodfit(HorseKicks, type = "poisson")
summary(fit)
fit$par
1 - ppois(4, fit$par$lambda)
Federalist
fit <- goodfit(Federalist, type = "poisson")
summary(fit)
fit = goodfit(Federalist, type = "nbinomial")
summary(fit)
fit$par
par=c(margin=c(3,3,3,1),cex=0.7)
dnbinom(0:10, fit$par$size, fit$par$prob) %>% barplot(names=0:10)
fit
# 這些程式碼設定網頁的格式，並安裝、載入一些基本的套件，請大家不要去改動<br>
rm(list=ls(all=T))
knitr::opts_chunk$set(comment = NA)
knitr::opts_knit$set(global.par = TRUE)
par(cex=0.8)
options(scipen=20, digits=5, width=80)
if(!require(pacman)) install.packages("pacman")
pacman::p_load(dplyr, vcd)
X = read.csv("cup.csv")$x
fit =  goodfit(table(X - 3), "poisson")
summary(fit)
X = read.csv("cup.csv")$x
fit =  goodfit(table(X - 3), "poisson")
summary(fit)
#5.0416e-317顯著，應該不是Poisson
X
fit =  goodfit(table(X - 3), "nbinom", par=list(size=3))
summary(fit)
fit$par
par=c(margin=c(3,3,3,1),cex=0.7) #設定圖表
dnbinom(0:10, fit$par$size, fit$par$prob) %>% barplot(names=0:10)
par=c(margin=c(3,3,3,1),cex=0.7) #設定圖表
dnbinom(0:12, fit$par$size, fit$par$prob) %>% barplot(names=0:10)
par=c(margin=c(3,3,3,1),cex=0.7) #設定圖表
dnbinom(0:10, fit$par$size, fit$par$prob) %>% barplot(names=0:10)
fit
1 - dnbinom(4, fit$par$lambda)
1 - dnbinom(4, fit$par$size, fit$par$prob)
dnbinom(1, fit$par$size, fit$par$prob)
1 - dnbinom(7, fit$par$size, fit$par$prob)  #0.034409
dnbinom(7, fit$par$size, fit$par$prob)
par=c(margin=c(3,3,3,1),cex=0.7) #設定圖表
dnbinom(1:10, fit$par$size, fit$par$prob) %>% barplot(names=0:10)
# 這些程式碼設定網頁的格式，並安裝、載入一些基本的套件，請大家不要去改動<br>
rm(list=ls(all=T))
knitr::opts_chunk$set(comment = NA)
knitr::opts_knit$set(global.par = TRUE)
par(cex=0.8)
options(scipen=20, digits=5, width=80)
if(!require(pacman)) install.packages("pacman")
pacman::p_load(dplyr, vcd)
# X是每個人成功三次才停的次數，分布像是nbinom+3
X = read.csv("cup.csv")$x
fit =  goodfit(table(X - 3), "poisson")
summary(fit)
#5.0416e-317顯著，應該不是Poisson
#因為我們知道是成功三次之前，所以n要等於3
fit =  goodfit(table(X - 3), "nbinom", par=list(size=3))
summary(fit)
#p = 0.26795，
#size：3
#prob：0.248，擲筊成功的機率
fit$par
#prob：0.248，擲筊成功的機率
#重複發生機率為`0.248`的實驗，第`3`次成功前失敗次數的分佈
#
par=c(margin=c(3,3,3,1),cex=0.7) #設定圖表
dnbinom(1:10, fit$par$size, fit$par$prob) %>% barplot(names=0:10)
fit =  goodfit(table(X - 3), "nbinom", par=list(size=3))
fit =  goodfit(table(X - 10), "nbinom", par=list(size=3))
fit =  goodfit(table(X - 10), "nbinom", par=list(size=10))
D = faithful$eruptions        # copy data to a short name
Adjust = 0.5                       # bandwidth adjustment
DEN = density(D, adjust = Adjust)      # density function
PDF = approxfun(DEN$x, DEN$y, yleft=0, yright=0)    # PDF
par(mar=c(2,4,2,1), cex=0.7)
curve(PDF(x), 1, 5.6, col='blue',lwd=2,main="Prob. Density Function")
rug(D)
abline(h=seq(0,1,0.1),col='lightgrey',lty=3)
x1 = seq(1, 6, 1/6); x2 = x1 + (1/6)     # 臨界值
px = sapply(1:length(x1), function(i) {  # 機率
integrate(PDF, x1[i], x2[i])$value     #
})
net = 100 * px - 5                       # 淨期望報酬
data.frame(x1, x2, px, net) %>%
arrange(desc(net)) %>%
mutate(
payoff =  cumsum(net),               # 累計(淨)期望報酬
investment = row_number() * 5,       # 累計投資、資本需求
roi = payoff / investment            # 累計投報率
) %>% filter(net > 0) %>% round(3)
abline(h=seq(0,1,0.1),col='lightgrey',lty=3)
D = faithful$eruptions        # 噴發時間資料放在D裡面
Adjust = 0.5                       # 調整頻寬(bandwidth，越小越陡峭、複雜) adjustment
DEN = density(D, adjust = Adjust)      # density function 機率密度函數
PDF = approxfun(DEN$x, DEN$y, yleft=0, yright=0)
# PDF 點機率，放進函數會告訴x等於某個數的時候y是多少
par(mar=c(2,4,2,1), cex=0.7) #設定畫布
curve(PDF(x), 1, 5.6, col='blue',lwd=2,main="Prob. Density Function") #x從1到5.6
rug(D) #下面很密的那些黑色線線
abline(h=seq(0,1,0.1),col='lightgrey',lty=3)
# 這些程式碼設定網頁的格式，並安裝、載入一些基本的套件，請大家不要去改動<br>
rm(list=ls(all=T))
knitr::opts_chunk$set(comment = NA)
knitr::opts_knit$set(global.par = TRUE)
par(cex=0.8)
options(scipen=20, digits=5, width=80)
if(!require(pacman)) install.packages("pacman")
pacman::p_load(dplyr, ggplot2, readr)
rm(list=ls(all=T))
load("data/olist.rdata")
n_distinct(S$seller_id) == nrow(S)
View(P)
View(S)
#
dnbinom(1, fit$par$size, fit$par$prob)  #0.034409
# 這些程式碼設定網頁的格式，並安裝、載入一些基本的套件，請大家不要去改動<br>
rm(list=ls(all=T))
knitr::opts_chunk$set(comment = NA)
knitr::opts_knit$set(global.par = TRUE)
par(cex=0.8)
options(scipen=20, digits=5, width=80)
if(!require(pacman)) install.packages("pacman")
if(!require(vcd)) install.packages("vcd")
pacman::p_load(dplyr, vcd)
par(mfrow=c(1,1), cex=0.7)
HorseKicks
#驗證是否符合Poisson分佈
#goodfit前面放資料，後面放分布類型
#p value <0.05有顯著差異
fit = goodfit(HorseKicks, type = "poisson")
summary(fit)
#算出lambda是多少
fit$par
1 - ppois(1, fit$par$lambda)
# 0.00042497 其實在保險上算很大的機率
1 - ppois(4, fit$par$lambda)
Federalist
fit <- goodfit(Federalist, type = "poisson")
summary(fit)
fit = goodfit(Federalist, type = "nbinomial")
summary(fit)
#size：1.1863；prob：0.64376
fit$par
par=c(margin=c(3,3,3,1),cex=0.7) #設定圖表
#從0畫到10，size的數值，prob的數值
dnbinom(0:10, fit$par$size, fit$par$prob) %>% barplot(names=0:10)
#
dnbinom(1, fit$par$size, fit$par$prob)  #0.034409
1 - dnbinom(7, fit$par$size, fit$par$prob)  #0.034409
dnbinom(1, fit$par$size, fit$par$prob)  #0.034409
pnbinom(1, fit$par$size, fit$par$prob)  #0.25063
pnbinom(7, fit$par$size, fit$par$prob)
pnbinom(1, fit$par$size, fit$par$prob)
1 - pnbinom(7, fit$par$size, fit$par$prob)
pnbinom(0:10, fit$par$size, fit$par$prob) %>% barplot(names=0:10)
1-0.84367-0.00039127
pnbinom(1, fit$par$size, fit$par$prob)  #0.84367
1 - pnbinom(7, fit$par$size, fit$par$prob)  #0.00039127
X
# 這些程式碼設定網頁的格式，並安裝、載入一些基本的套件，請大家不要去改動<br>
rm(list=ls(all=T))
knitr::opts_chunk$set(comment = NA)
knitr::opts_knit$set(global.par = TRUE)
par(cex=0.8)
options(scipen=20, digits=5, width=80)
if(!require(pacman)) install.packages("pacman")
pacman::p_load(dplyr, vcd)
# X是每個人成功三次才停的次數，分布像是nbinom+3
X = read.csv("cup.csv")$x
X
pnbinom(6, fit$par$size, fit$par$prob) - pnbinom(1, fit$par$size, fit$par$prob)
# 這些程式碼設定網頁的格式，並安裝、載入一些基本的套件，請大家不要去改動<br>
rm(list=ls(all=T))
knitr::opts_chunk$set(comment = NA)
knitr::opts_knit$set(global.par = TRUE)
par(cex=0.8)
options(scipen=20, digits=5, width=80)
if(!require(pacman)) install.packages("pacman")
if(!require(vcd)) install.packages("vcd")
pacman::p_load(dplyr, vcd)
par(mfrow=c(1,1), cex=0.7)
HorseKicks
#驗證是否符合Poisson分佈
#goodfit前面放資料，後面放分布類型
#p value <0.05有顯著差異
fit = goodfit(HorseKicks, type = "poisson")
summary(fit)
#算出lambda是多少
fit$par
1 - ppois(1, fit$par$lambda)
# 0.00042497 其實在保險上算很大的機率
1 - ppois(4, fit$par$lambda)
Federalist
fit <- goodfit(Federalist, type = "poisson")
summary(fit)
fit = goodfit(Federalist, type = "nbinomial")
summary(fit)
#size：1.1863；prob：0.64376
fit$par
par=c(margin=c(3,3,3,1),cex=0.7) #設定圖表
#從0畫到10看看，size的數值，prob的數值
dnbinom(0:10, fit$par$size, fit$par$prob) %>% barplot(names=0:10)
pnbinom(6, fit$par$size, fit$par$prob) - pnbinom(1, fit$par$size, fit$par$prob)
